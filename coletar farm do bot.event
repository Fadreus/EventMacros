automacro receiverName {
	priority -20 #high priority
	run-once 1
	BaseLevel > 0
	exclusive 1
	CheckOnAI auto,manual,off
	macro_delay .5
	call {

		################################################################
		#                                                              #
		#            Things for you to change on eventMacro            #
		#                                                              #
		################################################################

		##THIS IS THE MESSAGE THAT ACTIVATES THE WHOLE MACRO
		##OF RECEIVER
		#This message is irrelevant case you send a
		#custom coordinate via PM
		$message = come here

		## Debug option, useful to check errors
		$debug = 1
		################################################################
		#        End of things for you to change on eventMacro         #
		################################################################

		if (&config(receiverName) =~ /\w+/)  { #if there is any number or letter, it means it exist
			if (&config(receiverName) =~ /name of receiver/i) { 
				#if this trigger, it means it's wrong
				# is unecceptable
				[
				log ================================
				log =You forgot to configure the receiver name
				log =to configure is just go to config.txt
				log =and insert on a black link
				log =receiverName nameOfHim
				log =EXAMPLE: receiverName nipodemos
				log =Interrupting
				log ================================
				]
				do eval Misc::offlineMode();
				stop
			}
		} else { #se chegar aqui é porque nao existe no config.txt
			do conf -f receiverName name of receiver THAT RECEIVE THE ITEMS
		}

		$receiverName = &config(receiverName) #name of receiver THAT RECEIVE THE ITEMS


		##these are the common coordinates, you have to change
		##these coordinates are of where the receiver is, for the collectors to know 
		##where to find the receiver
		##EXAMPLE : prontera 100 100

		if (&config(meetPoint) =~ /\w+ \d+ \d+/ ) {
			#coordinates configured correctly
			$coordsOfTheReceiver = &config(meetPoint)
		} else {
			[
			log meetPoint is not configurated on config.txt
			log (or maybe a typo)
			log we need it for macro to proceed
			log correct way of configure:
			log meetPoint city coord_X coord_Y
			log EXAMPLE: meetPoint prontera 150 124
			log Or you can send a pm with the coordinates
			]
			do conf -f meetPoint INSERT CITY AND COORDINATES HERE

			#we will not interrupt macro here, because he can define this later by
			#sending a message to bot
		}
		
	
		$i = 1
		while (&config(IDofItem$i) =~ /\d+/) {
			$config = &config(IDofItem$i) #gets id in config, that can contains othere charateres
			$item = extrairID("$config") #extract only the id of the item
			$peso = extrairPeso("$item") #gets the weight of item in file item_weights on tables folder
			$pesoDoItem{$item} = $peso #configure a hash with weight and ID
			$i++
		}

		call configureStorage
		
		if ($debug = 1) {
			[
			log ====================================
			log =receiverName :$receiverName
			log =meetPoint: $coordsOfTheReceiver
			log =kafraPosition: $kafraCoords
			log ====================================
			]
		}
	}
}

macro configureStorage {
	#this swtich is necessary to decide which kafra you will use to store
	#it will be the closest do receiver coodinates
	#or prontera
	[
	switch ($coordsOfTheReceiver) {
		case (=~ /payon/) {
			$kafraCoords = payon 181 104
		}
		case (=~ /geffen/) {
			$kafraCoords = geffen 120 62
		}
		case (=~ /izlude/) {
			$kafraCoords = izlude 134 88
		}
		else {
			## cidade padrão pra dar storage é prontera
			$kafraCoords = prontera 151 29
		}
	}
	]
}

automacro PegandoFarm {
	PrivMsg /^\s*$message\s*$/ #Código enviado por PM para ativar a Macro
	exclusive 1
	call {
		## assim que receber a message do seu mercador
		## ele vai começar todo o processo
		if ($.PrivMsgLastName = $receiverName) {
			[
			do conf -f inPassToReceiver_sequence true
			do conf route_randomWalk 0
			do conf lockMap none
			do conf attackAuto 0
			do conf -f passToReceiver_step autosell
			]
			do pm "$receiverName" ok, ponto de encontro é: $coordsOfTheReceiver
			
		} else {
			[
			log ================================
			log =A random person send me pm
			log =ignoring completly
			log ================================
			]
			
		}
	}
}

automacro PegandoFarm_CoordenadaPersonalizada {
	PrivMsg /\w+ \d+ \d+/  #/ pra detectar as novas coordenadas
	CheckOnAI auto, manual
	priority -5
	exclusive 1
	call {
		## The receiver sent a custom coord, so it will be to that coordinate that you will go
		$coordsOfTheReceiver = checkMessage("$.PrivMsgLastMsg")
		log coordsOfTheReceiver: $coordsOfTheReceiver if ($debug = 1)
		if ($coordsOfTheReceiver = -1) stop
		do conf -f coordsOfTheReceiver $coordsOfTheReceiver
		call configureStorage
		
		##esse if existe pra checar se a pessoa que te mandou pm é o seu mercador
		##minha macro é a prova de inúteis qu tentam bugar a parada
		if ($.PrivMsgLastName = $receiverName) {
			do pm "$receiverName" ok, ponto de encontro é: $coordsOfTheReceiver
			[
			do conf -f inPassToReceiver_sequence true
			do conf route_randomWalk 0
			do conf lockMap none
			do conf attackAuto 0
			do conf -f passToReceiver_step autosell
			]
			
		} else {
			[
			log ================================
			log =A random person send me pm
			log =ignoring completly
			log ================================
			]
			
		}
	}
}

automacro fazerAutoSell {
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step autosell
	exclusive 1
	priority 20 #prioridade baixa
	run-once 1
	CheckOnAI auto,manual
	call {
		do pm "$receiverName" vou fazer o autosell
		do ai on
		do autosell
	}
}

#AI_storage_done

automacro completeiAsVendas {
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step autosell
	SimpleHookEvent AI_sell_auto_done
	exclusive 1
	priority -5 #prioridade alta
	call {
		##completado as vendas, vamos ver se precisa de storage
		do ai manual
		do conf -f passToReceiver_step irNoStorage
		release fazerAutoSell
	}
}

automacro Kafra_irNoNpc {
	NpcNotNear /Kafra Employee|Funcionária Kafra/
	exclusive 1
	ConfigKey passToReceiver_step irNoStorage
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto,manual
	call {
		do pm "$receiverName" ja vendi, agora vou pegar itens do storage
		do move $kafraCoords &rand(1,5)
	}
}

automacro Kafra_PertoDoNpc {
	NpcNear /Kafra Employee|Funcionária Kafra/
	ConfigKey passToReceiver_step irNoStorage
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto,manual
	exclusive 1
	timeout 30
	priority 2
	call {
		do talk $.NpcNearLastBinId
		do pm "$receiverName" ja abri o storage, falta pouco
		do talk resp 1
		#storage aberto, agora outra macro vai cuidar disso
	}
}

automacro PegandoItensDoStorage {
	StorageOpened 1
	exclusive 1
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto,manual
	call {
		@itens = &keys(%pesoDoItem)
		$i = 0
		log qtd de itens no array: '@itens' if ($debug = 1)
		
		if (@itens < 1) {
			[
			log ===================================
			log = no items configurated, check your
			log = config.txt
			log = Interrupting
			log ===================================
			]
			do eval Misc::offlineMode();
			stop 
		}
		while ($i < @itens && $.weightpercent < 90) {
			$idDoItemAtual = $itens[$i]
			$nomeDoItemAtual = pegarNomePelaId("$idDoItemAtual")
			$qtdNoStorage = &storamount($nomeDoItemAtual)
			
			$quantidadeQuePossoCarregar = &eval(int(($.maxweight-$.weight)/$pesoDoItem{$idDoItemAtual}))
			#essa parte do peso que é mais complicada, olha esse eval doidão kkkkk

			log Nome: '$nomeDoItemAtual', id: '$idDoItemAtual', if($debug = 1)

			if ( $qtdNoStorage > 0) {
				
				#vai pegar o item da lista de itens definida anteriormente (se tiver no armazem)
				#e vai pegar a quantidade máxima que o bot suporta de peso
				if ( $qtdNoStorage > $quantidadeQuePossoCarregar) {
					#se a qtd do item no storage for maior que a capacidade que a gente consegue carregar
					#vai pegar só o que dá
					log quantidade que eu vou pegar de $nomeDoItemAtual: '$quantidadeQuePossoCarregar' if ($debug = 1)
					do storage get $nomeDoItemAtual $quantidadeQuePossoCarregar
				} else {
					#senão, pega tudo mesmo 
					log quantidade que eu vou pegar de $nomeDoItemAtual: '$qtdNoStorage' if ($debug = 1)
					do storage get $nomeDoItemAtual
				}


				while (&storamount($nomeDoItemAtual) > 0 && $.weightpercent < 90) {
					## se entrar nesse if, provavelmente é um equipamento que só pode ser pego 1 por vez
					## então nao vou colocar a parte calcular o peso, ja quee é irrelevante
					do storage get $nomeDoItemAtual
				}
			} else {
				log Não tem $nomeDoItemAtual no armazem
			}
			$i++
		}
		$i = undef
		do storage close
		do conf -f passToReceiver_step termineiStorage
	}
}

automacro pegueiItensDoStorage {
	ConfigKey passToReceiver_step termineiStorage
	exclusive 1
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto,manual
	call {
		do pm "$receiverName" ja peguei tudo que dava, to indo ai
		do conf -f passToReceiver_step goToReceiver
	}
}

automacro goToReceiver {
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step goToReceiver
	PlayerNotNear /$receiverName/
	exclusive 1
	timeout 30
	CheckOnAI auto,manual
	call {
		do move $coordsOfTheReceiver
		if (&config(dealAuto) != 2) do conf dealAuto 2
		if (&config(dealAuto_names) != $receiverName) do conf dealAuto_names $receiverName
	}
}

automacro ReceiverNear {
	PlayerNear /.*$receiverName.*/
	timeout 5
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step goToReceiver
	CheckOnAI auto,manual
	call {
		if ($.PlayerNearLastDist >= 3) {
			[
			log ===================================
			log = Receiver is on screen but too far to deal
			log = Waiting he gets closer
			log = distance: $.PlayerNearLastDist
			log ===================================
			]
			stop
		}
		[
		if (&config(dealAuto) != 2) do conf dealAuto 2
		if (&config(dealAuto_names) != $receiverName) do conf dealAuto_names $receiverName
		]
		do pm "$receiverName" accept deal please
		do deal &player($receiverName)
	}
}

automacro givingItems {
	SimpleHookEvent engaged_deal
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto,manual
	timeout 60
	PlayerNear /$receiverName/
	exclusive 1
	call {
		if ($.PlayerNearLastDist < 3) {
			do conf -f passToReceiver_step inDeal
			$zenyToGive = &eval($.zeny - 100000)
			if ($zenyToGive > 0 ) {
				log zeny i will give: $zenyToGive
				do deal add z $zenyToGive
			}

			@itens = &keys(%pesoDoItem)

			$i = 0
			$itensNaNegociacao = 0
			while ($i < @itens && $itensNaNegociacao < 10) {
				log dentro do while pra passar itens if ($debug = 1)
				$idDoItemAtual = $itens[$i]
				$nomeDoItemAtual = pegarNomePelaId("$idDoItemAtual")
				$qtdDoItemAtualNoInventario = &invamount($nomeDoItemAtual)

				if ( $qtdDoItemAtualNoInventario > 0) {
					log item: $nomeDoItemAtual, quantidade: $qtdDoItemAtualNoInventario if ($debug = 1)
					## debug: log dentro do if pra passar itens
					do deal add &inventory($nomeDoItemAtual)
					$itensNaNegociacao++
				}
				$i++
			}
			$i = 0
			set exclusive 0
			do pm "$receiverName" já passei tudo, finaliza aí
			pause 2
			do deal
		} else {
			[
			log =======================================
			log =Tamo no meio da negociação, mas o mercador ta longe
			log =provavelmente é alguem tentando levar a melhor
			log =IGNORANDO COMPLETAMENTE
			log =======================================
			]
			stop
		}
	}
}

automacro checkDeal {
	macro_delay 0.2
	exclusive 1
	ConfigKey passToReceiver_step inDeal
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto,manual
	timeout 60
	call {
		$check = checkIfIsInDeal()
		if ($check = -1 ) do conf passToReceiver_step goToReceiver
	}
}

automacro Negociacao_clicarNoBotaoFinalizar {
	SimpleHookEvent finalized_deal
	timeout 20
	CheckOnAI auto,manual
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step inDeal
	call {
		pause 2
		do deal
	}
}

automacro Negociação_finalizada {
	SimpleHookEvent complete_deal
	CheckOnAI auto,manual
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step inDeal
	exclusive 1
	call {
		do conf -f passToReceiver_step passeiOsItens
	}
}

automacro NegociaçãoFinalizada_checandoPorMaisItens {
	CheckOnAI auto,manual
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step passeiOsItens
	exclusive 1
	call {
		release ReceiverNear
		do conf -f passToReceiver_step none
		
		@itens = &keys(%pesoDoItem)

		if ($debug = 1) {
			log \$itensNaNegociacao: $itensNaNegociacao
			log \@itens = @itens	
		}

		# esse if checa se tem mais itens pra passar que nao cabe numa
		# negociacao só (quando vc quer passar mais de 10 itens)
		if ($itensNaNegociacao >= 10 && @itens > 10 ) {
			log tem mais itens pra passar
			do pm "$receiverName" tem mais itens pra te passar mano
			do conf -f passToReceiver_step goToReceiver
			stop
		}

		# esse while checa se tem itens no storage que nao 
		# nao deu pra levar por conta que tava pesado
		# se tiver, ele faz a checagem do storage denovo
		$i = 0
		while ($i < @itens) {
			$idDoItemAtual = $itens[$i]
			$nomeDoItemAtual = pegarNomePelaId("$idDoItemAtual")

			if ($debug = 1) {
				log qtdNoStorage = &storamount($nomeDoItemAtual) 	
			}

			if (&storamount($nomeDoItemAtual) > 0) {
				[
				log ==========================================
				log =ainda tem mais itens pra pegar do armazem
				log ==========================================
				]
				$i = @itens
				do pm "$receiverName" aqui, tem mais coisas no armazen
				do pm "$receiverName" vou la buscar, fica ai em
				do conf -f passToReceiver_step irNoStorage
				stop
			}
			$i++
		}

		
		log final do while, acabou! if ($debug = 1)
		## se chegar nessa parte, significa que ja entregamos todos os itens
		## tanto do storage quanto do do inventario
		[
		log ================================
		log =Pronto, tudo entregue
		log ================================
		]
		
		do pm "$receiverName" ja te passei tudo que eu tinha, TUDO
		do conf -f passToReceiver_step acabou
	}
}

automacro acabou {
	ConfigKey inPassToReceiver_sequence true
	ConfigKey passToReceiver_step acabou
	CheckOnAI auto,manual
	exclusive 1
	call {
		[
		log FINALMENTE ACABOU!!!!!!
		]
		do conf -f deal_sequence none
		do conf -f passToReceiver_step none
		do conf -f coordsOfTheReceiver none
		do ai on
	}
}

automacro estouPassandoItens {
	ConfigKeyNot passToReceiver_step autosell
	ConfigKeyNot passToReceiver_step none
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto #só pra eu lembrar que isso só é chcado na ai auto
	exclusive 1
	call {
		do ai manual
	}
}

automacro ErroAoTentarNegociar {
	SimpleHookEvent error_deal
	CheckOnAI manual
	PlayerNotNear /$receiverName/
	exclusive 1
	call {

		[
		log ===============================================
		log tentamos negociar mas o mercador não está por perto
		log movendo-se pra o local especificado denovo: ($coordsOfTheReceiver)
		log ===============================================
		do move $coordsOfTheReceiver
		]
	}
}

automacro ErroAoTentarNegociar2 {
	SimpleHookEvent error_deal
	ConfigKey inPassToReceiver_sequence true
	CheckOnAI auto,manual
	exclusive 1
	call {
		[
		log ================================
		log = tentei negociar com o mercador, mas ele ta longe demais
		log ================================
		]
	}
}

automacro DealCancelled {
	SimpleHookEvent packet/deal_cancelled
	exclusive 1
	call {
		[
		log ===================================
		log = we were in a deal, but it was cancelled
		log = i will ask to Reciever to deal again #'
		log ===================================
		]
		
		if (&config(passToReceiver_step) = inDeal) do conf passToReceiver_step goToReceiver
		
	}
}

sub checkMessage {
	my ($message) = @_;
	if ($message =~ /(\w+ \d+ \d+)/) {
		return $1;
	} else {
		error "Erro ao tentar definir as coordenadas personalizadas.\n";
		error "provavelmente não foi enviado corretamente CIDADE E COORDENADA\n";
		error "message recebida: '$message'";
		return -1;
	}
}

sub extrairID {
	my ($config) = @_;
	if ($config =~ /^\s*(\d+)/) {
		return $1; #a id extraida
	} else {
		Log::error ("Não foi possível encontrar a ID do Item, cheque seu config.txt\nValor encontrado: '$config'\n");
		return;
	}
}

sub extrairPeso {
	my ($idPassada) = @_;
	open (my $fh, '<', 'tables/item_weights.txt') or die "File item_weights.txt not found";
	my @item_weights = <$fh>;
	close ($fh);
	chomp @item_weights;

	foreach my $line (@item_weights) {
		if (my ($id,$weight) = $line =~ /(\d+) (\d+)/) {
			if ($idPassada == $id) {
				return $weight/10;
				last;
			}
		}
	}
	
	return ;
}

sub pegarNomePelaId {
	my ($id) = @_;
	if ($id =~ /\d+/) { #checa se a id é composta somente por números

		if ($items_lut{$id}) { #checa se a id do item existe
			return $items_lut{$id};
		} else {
			error "número não é uma Id de um item('$id')\n";
			return -1;
		}
	} else {
		warning "Erro ao tentar conseguir o nome do item ('$id')\n".
		"forneça somente números (a ID do item)\n";
		return -1;
	}
}

sub checkIfIsInDeal {
	if (%currentDeal) {
		use Data::Dumper;
		warning Dumper(%currentDeal);
		return 1;
	} else {
		return -1;
	}
}