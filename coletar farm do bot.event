automacro receiverName {
	priority -999 #high priority
	run-once 1
	BaseLevel > 0
	exclusive 1
	CheckOnAI auto,manual
	macro_delay .5
	call {

		################################################################
		#                                                              #
		#            Things for you to change on eventMacro            #
		#                                                              #
		################################################################

		##THIS IS THE MESSAGE THAT ACTIVATES THE WHOLE MACRO
		##OF RECEIVER
		#This message is irrelevant case you send a
		#custom coordinate via PM
		$message = come here

		## Debug option, useful to check errors
		$debug = 1
		################################################################
		#        End of things for you to change on eventMacro         #
		################################################################

		if (&config(receiverName) =~ /\w+/)  { #if there is any number or letter, it means it exist
			if (&config(receiverName) =~ /name of receiver/i) { 
				#if this trigger, it means it's wrong
				# is unecceptable
				[
				log ================================
				log =You forgot to configure the receiver name
				log =to configure is just go to config.txt
				log =and insert on a black link
				log =receiverName nameOfHim
				log =EXAMPLE: receiverName nipodemos
				log =Interrupting
				log ================================
				]
				do eval Misc::offlineMode();
				stop
			}
		} else { #se chegar aqui Ã© porque nao existe no config.txt
			do conf -f receiverName name of receiver THAT RECEIVE THE ITEMS
		}

		$receiverName = &config(receiverName) #name of receiver THAT RECEIVE THE ITEMS


		##these are the common coordinates, you have to change
		##these coordinates are of where the receiver is, for the collectors to know 
		##where to find the receiver
		##EXAMPLE : prontera 100 100

		if (&config(meetPoint) =~ /\w+ \d+ \d+/ ) {
			#coordinates configured correctly
			$meetPoint = &config(meetPoint)
		} else {
			[
			log meetPoint is not configurated on config.txt
			log (or maybe a typo)
			log we need it for macro to proceed
			log correct way of configure:
			log meetPoint city coord_X coord_Y
			log EXAMPLE: meetPoint prontera 150 124
			log Or you can send a pm with the coordinates
			]
			do conf -f meetPoint INSERT CITY AND COORDINATES HERE

			#we will not interrupt macro here, because he can define this later by
			#sending a message to bot
		}
		
	
		$i = 1
		while (&config(IDofItem$i) =~ /\d+/) {
			$config = &config(IDofItem$i) #gets id in config, that can contains othere charateres
			$item = extractID("$config") #extract only the id of the item
			$weight = extractWeight("$item") #gets the weight of item in file item_weights on tables folder
			$weightOfItem{$item} = $weight #configure a hash with weight and ID
			$i++
		}

		call configureStorage
		
		if ($debug = 1) {
			[
			log ====================================
			log =receiverName :$receiverName
			log =meetPoint: $meetPoint
			log =kafraPosition: $kafraCoords
			log ====================================
			]
		}
	}
}

macro configureStorage {
	#this swtich is necessary to decide which kafra you will use to store
	#it will be the closest do receiver coodinates
	#or prontera
	[
	switch ($meetPoint) {
		case (=~ /payon/) {
			$kafraCoords = payon 181 104
		}
		case (=~ /geffen/) {
			$kafraCoords = geffen 120 62
		}
		case (=~ /izlude/) {
			$kafraCoords = izlude 134 88
		}
		else {
			## city it will go if is not the other ones
			$kafraCoords = prontera 151 29
		}
	}
	]
}

automacro PegandoFarm {
	PrivMsg /^\s*$message\s*$/ #Phrase send by pm to active the whole macro
	exclusive 1
	call {
		## as soon as he receives the message of you receiver
		## he will start the whole process
		if ($.PrivMsgLastName = $receiverName) {
			[
			do conf -f onDeliveryItemsProcess true
			do conf route_randomWalk 0
			do conf lockMap none
			do conf attackAuto 0
			do conf -f passToReceiver_step autosell
			]
			do pm "$receiverName" ok, meetPoint is: $meetPoint
			
		} else {
			[
			log ================================
			log =A random person send me pm
			log =ignoring completly
			log ================================
			]
			
		}
	}
}

automacro PegandoFarm_CoordenadaPersonalizada {
	PrivMsg /\w+ \d+ \d+/  #/ to detect new coordinates
	CheckOnAI auto, manual
	priority -5
	exclusive 1
	call {
		## The receiver sent a custom coord, so it will be to that coordinate that you will go
		$meetPoint = checkMessage("$.PrivMsgLastMsg")
		log meetPoint: $meetPoint if ($debug = 1)
		if ($meetPoint = -1) stop
		do conf -f meetPoint $meetPoint
		call configureStorage
		
		##this if exsit to check if the person who send the pm is the real receiver 
		##work against useless people who tries to bother
		if ($.PrivMsgLastName = $receiverName) {
			do pm "$receiverName" ok, meetPoint is: $meetPoint
			[
			do conf -f onDeliveryItemsProcess true
			do conf route_randomWalk 0
			do conf lockMap none
			do conf attackAuto 0
			do conf -f passToReceiver_step autosell
			]
			
		} else {
			[
			log ================================
			log =A random person send me pm
			log =ignoring completly
			log ================================
			]
			
		}
	}
}

automacro makeAutoSell {
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step autosell
	exclusive 1
	priority 20 #low priority 
	run-once 1
	CheckOnAI auto,manual
	call {
		do pm "$receiverName" i will autosell
		do ai on
		do autosell
	}
}

#AI_storage_done

automacro completedTheAutoSell {
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step autosell
	SimpleHookEvent AI_sell_auto_done
	exclusive 1
	priority -5 #prioridade alta
	call {
		##completado as vendas, vamos ver se precisa de storage
		do ai manual
		do conf -f passToReceiver_step goToStorage
		release makeAutoSell
	}
}

automacro kafra_goToNpc {
	NpcNotNear /Kafra Employee/ #TODO get kafra in korean
	exclusive 1
	ConfigKey passToReceiver_step goToStorage
	ConfigKey onDeliveryItemsProcess true
	CheckOnAI auto,manual
	call {
		do pm "$receiverName" already sold, i will get items from storage now
		do move $kafraCoords &rand(3,8)
	}
}

automacro kafra_nearNpc {
	NpcNear /Kafra Employee/ #TODO get kafra in korean
	ConfigKey passToReceiver_step goToStorage
	ConfigKey onDeliveryItemsProcess true
	CheckOnAI auto,manual
	exclusive 1
	timeout 30
	priority 2
	call {
		do talk $.NpcNearLastBinId
		do pm "$receiverName" i have opened storage already, wait just a little bit more
		do talk resp 1
		#opened storage, now other automacro will take care of this
	}
}

automacro gettingItemsFromStorage {
	StorageOpened 1
	exclusive 1
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step goToStorage
	CheckOnAI auto,manual
	call {
		@itens = &keys(%pesoDoItem)
		$i = 0
		log qt of items in array : '@itens' if ($debug = 1)
		
		if (@itens < 1) {
			[
			log ===================================
			log = no items configurated, check your
			log = config.txt
			log = Interrupting
			log ===================================
			]
			do eval Misc::offlineMode();
			stop 
		}
		while ($i < @itens && $.weightpercent < 90) {
			$idOfCurrentItem = $itens[$i]
			$nameOfCurrentItem = getNameById("$idOfCurrentItem")
			$qtOnStorage = &storamount($nameOfCurrentItem)
			
			$qtICanCarry = &eval(int(($.maxweight-$.weight)/$weightOfItem{$idOfCurrentItem}))
			#this eval was reeeeeeeaaaaally hard to make hahaahahah

			log Nome: '$nameOfCurrentItem', id: '$idOfCurrentItem', if($debug = 1)

			if ( $qtOnStorage > 0) {
				
				#it will get the item quantity and checks how much we can get
				if ( $qtOnStorage > $qtICanCarry) {
					#if the item amount on storage is biggeer than the amount he can carry
					#it will gets only what he can carry
					log amount that i will get of $nameOfCurrentItem: '$qtICanCarry' if ($debug = 1)
					do storage get $nameOfCurrentItem $qtICanCarry
				} else {
					#or else, get all the amount
					log quantidade que eu vou pegar de $nameOfCurrentItem: '$qtOnStorage' if ($debug = 1)
					do storage get $nameOfCurrentItem
				}


				while (&storamount($nameOfCurrentItem) > 0 && $.weightpercent < 90) {
					## when enter in this if, problably is an equipment
					## so will keep getting 1 by one, until there is no more
					do storage get $nameOfCurrentItem
				}
			} else {
				log Do not have $nameOfCurrentItem on storage
			}
			$i++
		}
		$i = undef
		do storage close
		do conf -f passToReceiver_step finishedStorage
	}
}

automacro finishedGetItemsFromStorage {
	ConfigKey passToReceiver_step finishedStorage
	exclusive 1
	ConfigKey onDeliveryItemsProcess true
	CheckOnAI auto,manual
	call {
		do pm "$receiverName" already get all i can carry, going there
		do conf -f passToReceiver_step goToReceiver
	}
}

automacro goToReceiver {
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step goToReceiver
	PlayerNotNear /$receiverName/
	exclusive 1
	timeout 30
	CheckOnAI auto,manual
	call {
		do move $meetPoint 1
		if (&config(dealAuto) != 2) do conf dealAuto 2
		if (&config(dealAuto_names) != $receiverName) do conf dealAuto_names $receiverName
	}
}

automacro ReceiverNear {
	PlayerNear /.*$receiverName.*/
	timeout 5
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step goToReceiver
	CheckOnAI auto,manual
	call {
		if ($.PlayerNearLastDist >= 3) {
			[
			log ===================================
			log = Receiver is on screen but too far to deal
			log = Waiting he gets closer
			log = distance: $.PlayerNearLastDist
			log ===================================
			]
			stop
		}
		[
		if (&config(dealAuto) != 2) do conf dealAuto 2
		if (&config(dealAuto_names) != $receiverName) do conf dealAuto_names $receiverName
		]
		do pm "$receiverName" accept deal please
		do deal &player($receiverName)
		pause 7
	}
}

automacro inDeal_givingItems {
	SimpleHookEvent engaged_deal
	ConfigKey onDeliveryItemsProcess true
	CheckOnAI auto,manual
	timeout 60
	PlayerNear /$receiverName/
	exclusive 1
	call {
		if ($.PlayerNearLastDist < 3) {
			do conf -f passToReceiver_step inDeal
			$zenyToGive = &eval($.zeny - 100000)
			if ($zenyToGive > 0 ) {
				log zeny i will give: $zenyToGive
				do deal add z $zenyToGive
			}

			@itens = &keys(%pesoDoItem)

			$i = 0
			$amountOfItemsOnDeal = 0
			while ($i < @itens && $amountOfItemsOnDeal < 10) {
				log inside while that pass items in deal if ($debug = 1)
				$idOfCurrentItem = $itens[$i]
				$nameOfCurrentItem = getNameById("$idOfCurrentItem")
				$qtdDoItemAtualNoInventario = &invamount($nameOfCurrentItem)

				if ( $qtdDoItemAtualNoInventario > 0) {
					log item: $nameOfCurrentItem, amount: $qtdDoItemAtualNoInventario if ($debug = 1)
					do deal add &inventory($nameOfCurrentItem)
					$amountOfItemsOnDeal++
				}
				$i++
			}
			$i = 0
			set exclusive 0
			do pm "$receiverName" i have added all, finalize the deals
			pause 2
			do deal
		} else {
			[
			log =======================================
			log =we are in a middle of a deal, but the master is too far
			log =problably is just some fool
			log =COMPLETLY IGNORING IT
			log =======================================
			]
			stop
		}
	}
}

automacro checkDeal {
	macro_delay 0.2
	exclusive 1
	ConfigKey passToReceiver_step inDeal
	ConfigKey onDeliveryItemsProcess true
	CheckOnAI auto,manual
	timeout 60
	call {
		$check = checkIfIsInDeal()
		if ($check = -1 ) do conf passToReceiver_step goToReceiver
	}
}

automacro inDeal_clicarNoBotaoFinalizar {
	SimpleHookEvent finalized_deal
	timeout 20
	CheckOnAI auto,manual
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step inDeal
	call {
		pause 2
		do deal
	}
}

automacro inDeal_completed {
	SimpleHookEvent complete_deal
	CheckOnAI auto,manual
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step inDeal
	exclusive 1
	call {
		do conf -f passToReceiver_step passeiOsItens
	}
}

automacro dealCompleted_checkingMoreItens {
	CheckOnAI auto,manual
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step passeiOsItens
	exclusive 1
	call {
		release ReceiverNear
		do conf -f passToReceiver_step none
		
		@itens = &keys(%pesoDoItem)

		if ($debug = 1) {
			log \$amountOfItemsOnDeal: $amountOfItemsOnDeal
			log \@itens = @itens	
		}

		# this if checks if it has more itens to delivery after deal end
		# (it happens if you want to pass more than 10 itens)
		if ($amountOfItemsOnDeal >= 10 && @itens > 10 ) {
			log it has more items to delivery
			do pm "$receiverName" i have more items to delivery to you
			do conf -f passToReceiver_step goToReceiver
			stop
		}

		# this while checks if there is more of the items on storage
		# happens when he can't carry everything
		# if it has, he will go to storage again
		$i = 0
		while ($i < @itens) {
			$idOfCurrentItem = $itens[$i]
			$nameOfCurrentItem = getNameById("$idOfCurrentItem")

			if ($debug = 1) {
				log qtOnStorage = &storamount($nameOfCurrentItem) 	
			}

			if (&storamount($nameOfCurrentItem) > 0) {
				[
				log ==========================================
				log =still have &storamount($nameOfCurrentItem) $nameOfCurrentItem on storage
				log =going to get
				log ==========================================
				]
				$i = undef
				do pm "$receiverName" still have items on storage, i will get
				do conf -f passToReceiver_step goToStorage
				stop
			}
			$i++
		}

		
		log end of while, it is over! if ($debug = 1)
		## if it gets here, it means that the bot dont have anymore the items, delivered all of them
		[
		log ========================================
		log =all my items were delivery succeesfully to the receiver
		log ========================================
		]
		
		do pm "$receiverName" passed everything, it is over
		do conf -f passToReceiver_step done
	}
}

automacro acabou {
	ConfigKey onDeliveryItemsProcess true
	ConfigKey passToReceiver_step done
	CheckOnAI auto,manual
	exclusive 1
	call {
		[
		log I HAVE DELIVERED ALL ITEMS
		]
		do conf -f onDeliveryItemsProcess none
		do conf -f passToReceiver_step none
		do ai on
	}
}

automacro estouPassandoItens {
	ConfigKeyNot passToReceiver_step autosell
	ConfigKeyNot passToReceiver_step none
	ConfigKey onDeliveryItemsProcess true
	CheckOnAI auto #just for me to remember that it will only be checked on auto
	exclusive 1
	call {
		do ai manual
	}
}

automacro ErroAoTentarNegociar {
	SimpleHookEvent error_deal
	CheckOnAI manual
	PlayerNotNear /$receiverName/
	exclusive 1
	call {
		[
		log ===============================================
		log tentamos negociar mas o mercador nÃ£o estÃ¡ por perto
		log movendo-se pra o local especificado denovo: ($meetPoint)
		log ===============================================
		do move $meetPoint
		]
	}
}

automacro ErroAoTentarNegociar2 {
	SimpleHookEvent error_deal
	ConfigKey onDeliveryItemsProcess true
	CheckOnAI auto,manual
	exclusive 1
	call {
		[
		log ================================
		log = tried to deal with receiver, but an error happened
		log ================================
		]
	}
}

automacro DealCancelled {
	SimpleHookEvent packet/deal_cancelled
	exclusive 1
	call {
		[
		log ===================================
		log = we were in a deal, but it was cancelled
		log = i will ask to Reciever to deal again
		log ===================================
		]
		
		if (&config(passToReceiver_step) = inDeal) do conf passToReceiver_step goToReceiver
		
	}
}

sub checkMessage {
	my ($message) = @_;
	if ($message =~ /(\w+ \d+ \d+)/) {
		return $1;
	} else {
		error "Error while trying to define custom coords.\n";
		error "problably was not sended correctly the CITY and COORDINATES\n";
		error "message received: '$message'";
		return -1;
	}
}

sub extractID {
	my ($config) = @_;
	if ($config =~ /^\s*(\d+)/) {
		return $1; #the extracted ID
	} else {
		error "unable to find item ID, check your config.txt\nValue found: '$config'\n";
		return;
	}
}

sub extractWeight {
	my ($idPassada) = @_;
	open (my $fh, '<', 'tables/item_weights.txt') or die "File item_weights.txt not found";
	my @item_weights = <$fh>;
	close ($fh);
	chomp @item_weights;

	foreach my $line (@item_weights) {
		if (my ($id,$weight) = $line =~ /(\d+) (\d+)/) {
			if ($idPassada == $id) {
				return $weight/10;
				last;
			}
		}
	}
	
	return ;
}

sub getNameById {
	my ($id) = @_;
	if ($id =~ /\d+/) { #check if the Id is made only of numbers

		if ($items_lut{$id}) { #checa se a id do item existe
			return $items_lut{$id};
		} else {
			error "number is not the ID of a item ('$id')\n";
			return -1;
		}
	} else {
		warning "Error while trying to get the item ('$id')\n".
		"it accepts only numbers (the ID of item)\n";
		return -1;
	}
}

sub checkIfIsInDeal {
	if (%currentDeal) {
		use Data::Dumper;
		warning Dumper(%currentDeal);
		return 1;
	} else {
		return -1;
	}
}